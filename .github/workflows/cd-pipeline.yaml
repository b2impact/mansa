name: cd-pipeline

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to be created and pushed'
        required: true
        default: ''

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4

        - name: Install Poetry
          run: pipx install poetry

        - name: Set up Python 3.10
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'
            cache: poetry
            cache-dependency-path: poetry.lock

        - name: Install dependencies
          run: |
            poetry install

        - name: Configure Poetry
          run: poetry config virtualenvs.in-project true

        - name: Install dependencies
          run: |
            poetry build

        - name: Store the distribution packages
          uses: actions/upload-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
    
    publish-to-testpypi:
      name: Publish Python üêç distribution üì¶ to TestPyPI
      needs:
      - build
      runs-on: ubuntu-latest
      environment:
        name: test
        url: https://test.pypi.org/p/mansa
      permissions:
        id-token: write  # IMPORTANT: mandatory for trusted publishing

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

    publish-to-pypi:
      name: Publish Python üêç distribution üì¶ to PyPI
      if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
      needs: ['build', 'publish-to-testpypi']
      runs-on: ubuntu-latest
      environment:
        name: pro
        url: https://pypi.org/p/mansa # Replace <package-name> with your PyPI project name
      permissions:
        id-token: write  # IMPORTANT: mandatory for trusted publishing

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  
    github-release:
      name: >-
        Sign the Python üêç distribution üì¶ with Sigstore
        and upload them to GitHub Release
      needs:
      - publish-to-pypi
      runs-on: ubuntu-latest
      permissions:
        contents: write  # IMPORTANT: mandatory for making GitHub Releases
        id-token: write  # IMPORTANT: mandatory for sigstore

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh release create
          '${{ github.event.inputs.tag_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh release upload
          '${{ github.event.inputs.tag_name }}' dist/**
          --repo '${{ github.repository }}'
    push-tag:
      needs: github-release
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Tag Info
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Push Tag to Repository
        run: |
          TAG=$(cat VERSION.txt)
          git push origin "$TAG"